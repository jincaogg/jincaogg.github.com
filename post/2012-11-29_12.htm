<!DOCTYPE HTML>
<html dir="ltr" lang="zh-CN">
<head>
<title>PB for PHP</title>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="description" content="">
<meta name="viewport" content="width=device-width">
</head>


<div class="navbar navbar-inverse navbar-fixed-top">
 <div class="navbar-inner">
  <div class="container">
    <a data-toggle="collapse" data-target=".nav-collapse" class="btn btn-navbar">
        <i class="icon icon-reorder"></i>菜单</a>
    <a href="/index.htm" class="brand">RedMast</a>
   <div class="nav-collapse collapse">
    <ul class="nav">
     <li class="active"><a href="/index.htm">首页</a></li>
     <li><a href="/list.htm">列表</a></li>
     
         <li><a href="/post/2012-11-28_test.htm">测试</a></li>
     
         <li><a href="/page/about.htm">About</a></li>
     
    </ul>
   </div>
  </div>
 </div>
</div>




<div class='container'>
  <div class='row-fluid'>
    <div>
        <div clas='row'>
        <h2 class='span5'>PB for PHP</h2>
        <small>2012-11-28 11:25</small>
        </div>
        <hr/>
    </div>
  </div>
</div>
<xmp theme="spacelab" style="display:none;">

#Protobuf 在PHP里应用备忘
Title:jccc

##引用包Protocolbuf
  
  1. 下载包[pb4php](http://code.google.com/p/pb4php/)
  2. 根据proto文件生成PHP的代码文件`test.proto`>`pb_proto_test.php` 
                     
         <?php
         require_once('../parser/pb_parser.php');
         $test = new PBParser();
         $test->parse('./test.proto');
         //---
         
 
  3. 引用刚生成的代码文件，解析，存储PB格式数据
         
         <?php         
         require_once('../message/pb_message.php');
         // now read it with the old file
         // include the generated file
         require_once('./pb_proto_test.php');    
         $string = file_get_contents('./test.pb');
         // Just read it
         $book = new AddressBook();
         $book->parseFromString($string);
         var_dump($book->person_size());
         $person = $book->person(0);
         var_dump($person->name());
         $person = $book->person(1);
         var_dump($person->name());        
         //-------------------    
         $book = new AddressBook();
         $person = $book->add_person();
         $person->set_name('Nikolai');
         $person = $book->add_person();
         $person->set_name('Kordulla');
         $person->set_surname('MySurname');
         $phone_number = $person->add_phone();
         $phone_number->set_number('0711');
         $phone_number->set_type(Person_PhoneType::WORK);
         $phone_number = $person->add_phone();
         $phone_number->set_number('0171');
         $phone_number->set_type(Person_PhoneType::MOBILE);
         $phone_number = $person->add_phone();
         $phone_number->set_number('030');        
         // serialize
         $string = $book->SerializeToString();

                   
    

  

</xmp>
<script src="http://strapdownjs.com/v/0.1/strapdown.js"></script>
<footer>
      <div class="container">
        <div class="row">
          <div class="span12">
            <center>
              <p>Copyright © 2013</p>
            </center>
          </div>
        </div>
      </div>
</footer>
</html>

        <small>2012-11-28 11:25</small>
        <h2 class='span5'>PB for PHP</h2>
